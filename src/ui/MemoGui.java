package ui;

import ui.MemoAdd;
import memo.Memo;
import memo.MemoManager;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;
import java.util.Scanner;


public class MemoGui extends JFrame { 
    private MemoManager manager;
    private DefaultListModel<Memo> model = new DefaultListModel<>();

    public MemoGui(MemoManager manager) {
        this.manager = manager;
        setTitle("hashmemo");
        setSize(600, 500);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new BorderLayout());
  
        //  „Éò„ÉÉ„ÉÄ„ÉºÔºà‰∏äÈÉ®„Éú„Çø„É≥Ôºâ
        
        //„É°„É¢ËøΩÂä†„Ç§„Éô„É≥„Éà
        JPanel topPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JButton addMemoButton = new JButton("„É°„É¢ËøΩÂä†");
        addMemoButton.addActionListener(e -> {
            MemoAdd add = new MemoAdd(this, manager, model);
            add.setVisible(true);
        });
        
        //ÁîªÈù¢„É¨„Ç§„Ç¢„Ç¶„Éà„ÄÄ‰∏äÈÉ®        
        JComboBox<String> tagCombo = new JComboBox<>(manager.getAllTags().toArray(new String[0]));
        JTextField searchField = new JTextField(20);
        JButton searchButton = new JButton("Ê§úÁ¥¢");

        topPanel.add(addMemoButton);
        topPanel.add(new JLabel("„Çø„Ç∞:"));
        topPanel.add(tagCombo);
        topPanel.add(searchField);
        topPanel.add(searchButton);
        add(topPanel, BorderLayout.NORTH);
       

        // „É°„É¢‰∏ÄË¶ßË°®Á§∫
        manager.getAll().forEach(model::addElement);
        JList<Memo> memoList = new JList<>(model);
        JScrollPane scroll = new JScrollPane(memoList);
        scroll.setPreferredSize(new Dimension(500, 0));
        
        //ÁîªÈù¢„É¨„Ç§„Ç¢„Ç¶„Éà„ÄÄ„É°„É¢‰∏ÄË¶ß
        JPanel memoPanel = new JPanel(new BorderLayout());
        memoPanel.add(new JLabel("„É°„É¢‰∏ÄË¶ß", SwingConstants.CENTER), BorderLayout.NORTH);
        memoPanel.add(scroll, BorderLayout.CENTER);
        add(memoPanel,BorderLayout.CENTER);
        
        //„É°„É¢Ë©≥Á¥∞Ë°®Á§∫„Ç§„Éô„É≥„Éà
        memoList.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    Memo selected = memoList.getSelectedValue();
                    if (selected != null) {
                        showMemoDetails(selected);
                    }
                }
            }
                
        });
}
    
    private void showMemoDetails(Memo memo) {
        
        StringBuilder sb = new StringBuilder();
        sb.append("üìå „Çø„Ç§„Éà„É´: ").append(memo.getTitle()).append("\n\n")
          .append("üè∑Ô∏è „Çø„Ç∞: ").append(String.join(", ", memo.getTags())).append("\n\n")
          .append("üìù Êú¨Êñá:\n").append(memo.getBody());

        JTextArea detailsArea = new JTextArea(sb.toString(), 15, 40);
        detailsArea.setEditable(false);
        detailsArea.setLineWrap(true);
        detailsArea.setWrapStyleWord(true);
        detailsArea.setFont(new Font("Meiryo", Font.PLAIN, 14));

        JScrollPane scrollPane = new JScrollPane(detailsArea);
        
     // Êìç‰Ωú„Éú„Çø„É≥ÔºàÁ∑®ÈõÜ„ÉªÂâäÈô§Ôºâ
        JButton editButton = new JButton("Á∑®ÈõÜ");
        JButton deleteButton = new JButton("ÂâäÈô§");

        editButton.addActionListener(e -> {
            MemoAdd editDialog = new MemoAdd(this, manager, model, memo); // Á∑®ÈõÜ„É¢„Éº„Éâ„ÅßÂëº„Å≥Âá∫„Åô
            editDialog.setVisible(true);
        });

        deleteButton.addActionListener(e -> {
            int confirm = JOptionPane.showConfirmDialog(this, "„Åì„ÅÆ„É°„É¢„ÇíÂâäÈô§„Åó„Åæ„Åô„ÅãÔºü", "Á¢∫Ë™ç", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                manager.delete(memo);
                model.removeElement(memo);
            }
        });

        JPanel buttonPanel = new JPanel(new FlowLayout(FlowLayout.RIGHT));
        buttonPanel.add(editButton);
        buttonPanel.add(deleteButton);

        JPanel dialogPanel = new JPanel(new BorderLayout());
        dialogPanel.add(scrollPane, BorderLayout.CENTER);
        dialogPanel.add(buttonPanel, BorderLayout.SOUTH);
        
        JOptionPane.showMessageDialog(this, dialogPanel, "„É°„É¢„ÅÆË©≥Á¥∞", JOptionPane.INFORMATION_MESSAGE);
    }

/*    private void clearInput() {
        titleField.setText("");
        tagField.setText("");
    }*/
}